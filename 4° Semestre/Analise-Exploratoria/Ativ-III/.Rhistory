1 + 1
a <- 10
a -> 10
10 -> c
d <- 20
c -> d
d <- 20
c <- d
c -> d
c <-a + b
c <-a + d
c <-a + d
c <-a + d
c <-a + d
c
c <-a + d
c <- a + d
a <- 10
c <- a + d
c <- a + d
c <- a + d
c
c
a -> 10
d -> 30
c
c <- a + d
setwd("C:/Users/Alex/Desktop/ESPM_Arquivos/4° Semestre/Analise-Exploratoria/RegressaoLinear")
setwd("C:/Users/Alex/Desktop/ESPM_Arquivos/4° Semestre/Analise-Exploratoria/RegressaoLinear")
dados = read_excel("Aula 07 - regressão simples.xlsx")
library(readxl)
dados = read_excel("Aula 07 - regressão simples.xlsx")
setwd("C:/Users/Alex/Desktop/ESPM_Arquivos/4° Semestre/Analise-Exploratoria/Ativ-III")
library(ggplot2)
library(readxl)
library(dplyr)
library(shiny)
library(shiny)
# Carregar dados
dados <- read_xlsx("leituras.xlsx")
# Exibir nomes das colunas para verificar se estão corretos
print(names(dados))
# Ajuste de nomes (substitua 'IdadeCorreta' e 'FreqCellCorreta' pelos nomes corretos)
dados <- rename(dados, idade = IdadeCorreta, freqCell = FreqCellCorreta)
# Remover NA
dados <- na.omit(dados)
# Input de data
renderUI({
dateInput(
"selected_date",
label = "Selecione a Data",
value = Sys.Date(),
min = min(dados$data),
max = max(dados$data),
format = "dd-mm-yyyy"
)
})
# Gráfico de Consumo por Dispositivo
renderPlot({
ggplot(filtered_data(), aes(x = factor(id_dispositivo), y = consumo, fill = factor(id_dispositivo))) +
geom_bar(stat = "identity") +
labs(
title = paste("Consumo em", input$selected_date),
x = "ID do Dispositivo",
y = "Consumo (em kWh)",
fill = "Dispositivo"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
})
# Gráfico de Luminosidade filtrado por data
renderPlot({
ggplot(filtered_data(), aes(x = factor(id_dispositivo), y = luminosidade, fill = factor(id_dispositivo))) +
geom_bar(stat = "identity") +
labs(
title = paste("Luminosidade em", input$selected_date),
x = "ID do Dispositivo",
y = "Luminosidade (%)",
fill = "Dispositivo"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
})
# Input de data
renderUI({
dateInput(
"selected_date",
label = "Selecione a Data",
value = Sys.Date(),
min = min(dados$data),
max = max(dados$data),
format = "dd-mm-yyyy"
)
})
# Gráfico de Consumo Total ao Longo do Tempo (Barras)
renderPlot({
ggplot(filtered_data(), aes(x = factor(id_dispositivo), y = consumo, fill = factor(id_dispositivo))) +
geom_bar(stat = "identity", position = "dodge") +  # 'dodge' ajusta as barras lado a lado
labs(
title = paste("Consumo Total no Dia:", input$selected_date),
x = "ID do Dispositivo",
y = "Consumo (em kWh)",
fill = "Dispositivo"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
})
library(ggthemes)      # Para temas avançados
library(RColorBrewer)  # Para paletas de cores
library(scales)        # Para melhorar as escalas
# Gráfico estilizado de consumo por dispositivo
renderPlot({
ggplot(filtered_data(), aes(x = factor(id_dispositivo), y = consumo, fill = factor(id_dispositivo))) +
geom_bar(stat = "identity", width = 0.7, alpha = 0.9) +  # Barras com opacidade
scale_fill_brewer(palette = "Set2") +  # Paleta de cores mais suave
labs(
title = paste("Consumo por Dispositivo em", input$selected_date),
x = "ID do Dispositivo",
y = "Consumo (kWh)",
fill = "Dispositivo"
) +
theme_hc() +  # Tema Highcharts
theme(
plot.title = element_text(size = 16, face = "bold", color = "#333333"),
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12),
legend.position = "top",
legend.title = element_text(face = "bold"),
panel.grid.major = element_line(color = "#e0e0e0", size = 0.2),
panel.grid.minor = element_blank()
)
})
library(plotly)
